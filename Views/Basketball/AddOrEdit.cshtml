@model BasketballMVC.Models.Basketball
@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Basketball", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.BallId)
    <div class="form-group">
        @Html.LabelFor(model => model.PlayerName, new { @class = "control-label" })
        @Html.EditorFor(model => model.PlayerName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PlayerName)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Exercise, new { @class = "control-label" })
        @Html.EditorFor(model => model.Exercise, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Exercise)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExerciseDuration, new { @class = "control-label" })
        @Html.EditorFor(model => model.ExerciseDuration, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ExerciseDuration)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExerciseDate, new { @class = "control-label" })
        @Html.EditorFor(model => model.ExerciseDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ExerciseDate)
        <span class="form-control" id="error" width="100px"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <input type="reset" value="Reset" class="btn btn-warning" />
    </div>
}

